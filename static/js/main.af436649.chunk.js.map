{"version":3,"sources":["components/Navbar/Navbar.tsx","Pages/HomePage/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","Pages/PeoplePage/PeoplePage.tsx","Pages/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["Navbar","className","role","isActive","classNames","to","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","name","sex","slug","PeopleTable","people","map","born","died","mother","motherName","father","fatherName","PeoplePage","useState","setPeople","isLoading","setIsLoading","hasError","setHasError","findPerson","useCallback","fetchedPeople","find","useEffect","fetchPeople","peopleWithParents","useParams","shouldShowNoPeopleMessage","length","NotFoundPage","App","index","element","path","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.af436649.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar: FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => classNames('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => classNames('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { FC } from 'react';\n\nexport const HomePage: FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: FC<Props> = ({ person }) => {\n  const { name, sex, slug } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames({ 'has-text-danger': sex === 'f' })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  people: Person[],\n  slug: string | undefined,\n};\n\nexport const PeopleTable: FC<Props> = ({ people, slug }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            key={person.slug}\n            data-cy=\"person\"\n            className={classNames({\n              'has-background-warning': slug === person.slug,\n            })}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              {person.mother\n                ? <PersonLink person={person.mother} />\n                : person.motherName || '-'}\n            </td>\n            <td>\n              {person.father\n                ? <PersonLink person={person.father} />\n                : person.fatherName || '-'}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import {\n  FC,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\nimport { useParams } from 'react-router-dom';\n// import { PeopleTable } from '../components/PeopleTable/PeopleTable';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { Loader } from '../../components/Loader';\nimport { PeopleTable } from '../../components/PeopleTable/PeopleTable';\n\nexport const PeoplePage: FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const findPerson = useCallback((name: string, fetchedPeople: Person[]) => {\n    return fetchedPeople.find(person => person.name === name);\n  }, []);\n\n  useEffect(() => {\n    const fetchPeople = async () => {\n      if (hasError) {\n        setHasError(false);\n      }\n\n      setIsLoading(true);\n\n      try {\n        const fetchedPeople = await getPeople();\n\n        const peopleWithParents = fetchedPeople.map(person => {\n          return {\n            ...person,\n            mother: person.motherName\n              ? findPerson(person.motherName, fetchedPeople)\n              : null,\n            father: person.fatherName\n              ? findPerson(person.fatherName, fetchedPeople)\n              : null,\n          };\n        });\n\n        setPeople(peopleWithParents);\n      } catch {\n        setHasError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchPeople();\n  }, []);\n\n  const { slug } = useParams();\n  const shouldShowNoPeopleMessage = !hasError && !isLoading && !people.length;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {hasError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {shouldShowNoPeopleMessage && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length > 0 && (\n            <PeopleTable people={people} slug={slug} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { FC } from 'react';\n\nexport const NotFoundPage: FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { Navbar } from './components/Navbar/Navbar';\nimport { HomePage } from './Pages/HomePage/HomePage';\nimport { PeoplePage } from './Pages/PeoplePage/PeoplePage';\nimport { NotFoundPage } from './Pages/NotFoundPage/NotFoundPage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route index element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"people\" element={<PeoplePage />}>\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}